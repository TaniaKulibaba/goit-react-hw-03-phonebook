{"version":3,"sources":["components/ContactListItem/ContactListItem.module.scss","components/Filter/Filter.module.scss","components/ContactList/ContactList.module.scss","components/ContactForm/ContactForm.module.scss","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","event","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckUnique","alert","this","className","styles","form","onSubmit","label","input","type","pattern","title","placeholder","required","onChange","button","Component","PropTypes","func","isRequired","ContactListItem","onRemove","item","onClick","ContactList","contacts","length","list","map","contact","Filter","filter","filterLabel","App","handleAddContact","newContact","handleCheckUnique","isExistContact","find","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,8BAA8B,OAAS,kC,mBCAhED,EAAOC,QAAU,CAAC,YAAc,4BAA4B,MAAQ,wB,mBCApED,EAAOC,QAAU,CAAC,KAAO,4B,kBCAzBD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,sKCI5HC,EAAgB,CAClBC,KAAM,GACNC,OAAQ,IAGNC,E,4MACFC,MAAQJ,E,EAERK,iBAAmB,YAAiB,IAAdC,EAAa,EAAbA,OACVL,EAAgBK,EAAhBL,KAAMM,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBP,EAAOM,K,EAG5BE,iBAAmB,SAACC,GAChBA,EAAMC,iBAEN,MAAyB,EAAKP,MAAtBH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACNU,EAAU,EAAKC,MAAfD,MAEgB,EAAKE,iBAI7BF,EAAM,CAAEG,GAAIC,cAAQf,OAAMC,WAC1B,EAAKe,c,EAGTH,aAAe,WACX,MAAyB,EAAKV,MAAtBH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACNgB,EAAkB,EAAKL,MAAvBK,cACR,OAAKjB,GAASC,EAKPgB,EAAcjB,IAJjBkB,MAAM,wBACC,I,EAMfF,UAAY,kBAAM,EAAKT,SAASR,I,4CAEhC,WACI,MAAyBoB,KAAKhB,MAAtBH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACI,uBAAMmB,UAAWC,IAAOC,KAAMC,SAAUJ,KAAKX,iBAA7C,UACI,wBAAOY,UAAWC,IAAOG,MAAzB,iBACI,uBACIJ,UAAWC,IAAOI,MAClBC,KAAK,OACL1B,KAAK,OACL2B,QAAQ,yHACRC,MAAM,kcACNC,YAAY,aACZC,UAAQ,EACRxB,MAAON,EACP+B,SAAUZ,KAAKf,sBAGvB,wBAAOgB,UAAWC,IAAOG,MAAzB,mBACI,uBACIJ,UAAWC,IAAOI,MAClBC,KAAK,MACL1B,KAAK,SACL2B,QAAQ,yFACRC,MAAM,giBACNC,YAAY,qBACZC,UAAQ,EACRxB,MAAOL,EACP8B,SAAUZ,KAAKf,sBAEvB,wBAAQgB,UAAWC,IAAOW,OAAQN,KAAK,SAAvC,gC,GAhEUO,aAuE1BC,IAAUhC,YAAc,CACtBqB,SAAUW,IAAUC,KAAKC,YAGZlC,Q,yBCnEAmC,EAfS,SAAC,GAAoC,IAAlCvB,EAAiC,EAAjCA,GAAId,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQqC,EAAe,EAAfA,SACzC,OACI,qBAAalB,UAAWC,IAAOkB,KAA/B,UAAsCvC,EAAtC,KAA8CC,EAC1C,wBAAQmB,UAAWC,IAAOW,OAAQN,KAAK,SAASc,QAAS,kBAAMF,EAASxB,IAAxE,sBADKA,I,iBCeF2B,EAhBK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUJ,EAAe,EAAfA,SAC7B,OAAwB,IAApBI,EAASC,OAAqB,KAE9B,oBAAIvB,UAAWC,IAAOuB,KAAtB,SACKF,EAASG,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,2BAAqBA,GAArB,IAA8BR,SAAUA,W,iBCazCS,EAnBA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQjB,EAAe,EAAfA,SACtB,OACI,wBAAOX,UAAWC,IAAO4B,YAAzB,kCACI,uBAAO7B,UAAWC,IAAOI,MACrBC,KAAK,OACL1B,KAAK,SACLM,MAAO0C,EACPjB,SAAU,gBAAG1B,EAAH,EAAGA,OAAH,OAAgB0B,EAAS1B,EAAOC,QAC1CuB,YAAY,8BC2EbqB,E,4MAhFb/C,MAAQ,CACNuC,SAAU,CACR,CAAC5B,GAAI,OAAQd,KAAM,gBAAiBC,OAAQ,aAC5C,CAACa,GAAI,OAAQd,KAAM,iBAAkBC,OAAQ,aAC7C,CAACa,GAAI,OAAQd,KAAM,gBAAiBC,OAAQ,aAC5C,CAACa,GAAI,OAAQd,KAAM,iBAAkBC,OAAQ,cAE/C+C,OAAQ,I,EAGVG,iBAAmB,SAACC,GAAD,OACjB,EAAK7C,UAAS,gBAAGmC,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,GAAD,mBAAMA,GAAN,CAAgBU,S,EAG5BC,kBAAoB,SAACrD,GACnB,IAEMsD,IAFe,EAAKnD,MAAlBuC,SAE0Ba,MAAK,SAAAT,GAAO,OAAIA,EAAQ9C,OAASA,KAInE,OAFAsD,GAAkBpC,MAAM,oCAEhBoC,G,EAGVE,oBAAsB,SAAC1C,GAAD,OACpB,EAAKP,UAAS,kBAAmB,CAAEmC,SAArB,EAAGA,SAAqCM,QAAO,SAACF,GAAD,OAAaA,EAAQhC,KAAOA,U,EAG3F2C,mBAAqB,SAACT,GAAD,OAAY,EAAKzC,SAAS,CAAEyC,Y,EAEjDU,mBAAqB,WACnB,MAA6B,EAAKvD,MAA1BuC,EAAR,EAAQA,SAAUM,EAAlB,EAAkBA,OAClB,OAAON,EAASM,QAAO,SAACF,GAAD,OAAaA,EAAQ9C,KAAK2D,cAAcC,SAASZ,EAAOW,mB,uDAMjF,WACEE,QAAQC,IAAI,yBAEZ,IAAMpB,EAAWqB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMzB,GAE9BuB,GACF9C,KAAKZ,SAAS,CAAEmC,SAAUuB,M,gCAI9B,SAAmBG,EAAWC,GAC5BR,QAAQC,IAAI,0BAER3C,KAAKhB,MAAMuC,WAAa2B,EAAU3B,WACpCmB,QAAQC,IAAI,qRAEZC,aAAaO,QAAQ,WAAYJ,KAAKK,UAAUpD,KAAKhB,MAAMuC,c,oBAM/D,WACEmB,QAAQC,IAAI,cAEZ,IAAQd,EAAW7B,KAAKhB,MAAhB6C,OACFwB,EAAkBrD,KAAKuC,qBAE7B,OACE,gCACE,2CACA,cAAC,EAAD,CAAa/C,MAAOQ,KAAKgC,iBAAkBlC,cAAeE,KAAKkC,oBAC/D,0CACA,cAAC,EAAD,CAAQL,OAAQA,EAAQjB,SAAUZ,KAAKsC,qBACvC,cAAC,EAAD,CAAaf,SAAU8B,EAAiBlC,SAAUnB,KAAKqC,6B,GA3E7CvB,aCAlBwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0c8def6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__2SOhC\",\"button\":\"ContactListItem_button__3Oizn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__5d6ZA\",\"input\":\"Filter_input__2g99y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2Nl1H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3ntd0\",\"label\":\"ContactForm_label__s5L_g\",\"input\":\"ContactForm_input__13keK\",\"button\":\"ContactForm_button__2zLua\"};","import { Component } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './ContactForm.module.scss';\r\n\r\nconst INITIAL_STATE = {\r\n    name: '',\r\n    number: '',    \r\n}\r\n\r\nclass ContactForm extends Component {\r\n    state = INITIAL_STATE\r\n\r\n    handleChangeForm = ({ target }) => {\r\n        const { name, value } = target;\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        const { name, number } = this.state;\r\n        const { onAdd } = this.props\r\n\r\n        const isValidatedForm = this.validateForm()\r\n\r\n        if (!isValidatedForm) return\r\n        \r\n        onAdd({ id: uuid(), name, number })\r\n        this.resetForm()\r\n    }\r\n\r\n    validateForm = () => {\r\n        const { name, number } = this.state;\r\n        const { onCheckUnique } = this.props\r\n        if (!name || !number) {\r\n            alert('Some field is empty')\r\n            return false\r\n        }\r\n\r\n        return onCheckUnique(name)\r\n    }\r\n\r\n    resetForm = () => this.setState(INITIAL_STATE)\r\n\r\n    render() {\r\n        const { name, number } = this.state\r\n        return (\r\n            <form className={styles.form} onSubmit={this.handleFormSubmit}>\r\n                <label className={styles.label}>Name\r\n                    <input\r\n                        className={styles.input}\r\n                        type='text'\r\n                        name='name'\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        placeholder='Enter name'\r\n                        required\r\n                        value={name}\r\n                        onChange={this.handleChangeForm} />                    \r\n                </label>\r\n\r\n                <label className={styles.label}>Number\r\n                    <input\r\n                        className={styles.input}\r\n                        type='tel'\r\n                        name='number'\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        placeholder='Enter phone number'\r\n                        required\r\n                        value={number}\r\n                        onChange={this.handleChangeForm} />\r\n                </label>\r\n                <button className={styles.button} type='submit'>Add contact</button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nPropTypes.ContactForm = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import PropTypes from \"prop-types\";\r\nimport styles from './ContactListItem.module.scss';\r\n\r\nconst ContactListItem = ({ id, name, number, onRemove }) => {\r\n    return (\r\n        <li key={id} className={styles.item}>{name}: {number}\r\n            <button className={styles.button} type='button' onClick={() => onRemove(id)}>Delete</button>\r\n        </li>\r\n    )\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import PropTypes from \"prop-types\";\r\nimport ContactListItem from '../ContactListItem';\r\nimport styles from './ContactList.module.scss';\r\n\r\nconst ContactList = ({ contacts, onRemove }) => {\r\n    if (contacts.length === 0) return null\r\n    return (\r\n        <ul className={styles.list}>\r\n            {contacts.map((contact) => (\r\n                <ContactListItem {...contact} onRemove={onRemove} />\r\n            ))}\r\n        </ul>\r\n    )\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import PropTypes from \"prop-types\";\r\nimport styles from './Filter.module.scss';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n    return (\r\n        <label className={styles.filterLabel}>Find contacts by name\r\n            <input className={styles.input}\r\n                type='text'\r\n                name='filter'\r\n                value={filter}\r\n                onChange={({ target }) => onChange(target.value)}\r\n                placeholder='Enter name for Search'\r\n            />\r\n        </label>\r\n    )\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},  \n    ],\n    filter: '',\n  }\n\n  handleAddContact = (newContact) =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }))\n  \n  handleCheckUnique = (name) => {\n    const { contacts } = this.state;\n\n    const isExistContact = !!contacts.find(contact => contact.name === name)\n\n    isExistContact && alert('Contact is already in contacts.')\n\n    return !isExistContact\n  }\n\n  handleRemoveContact = (id) =>\n    this.setState(({ contacts }) => ({ contacts: contacts.filter((contact) => contact.id !== id) }))\n\n\n  handleFilterChange = (filter) => this.setState({ filter })\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()))\n  }\n\n\n\n\n  componentDidMount() {\n    console.log('App componentDidMount');\n\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componentDidUpdate');\n\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Обновился список контактов, записываю contacts в хранилище');\n\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n\n\n  render() {\n    console.log('App render');\n\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onAdd={this.handleAddContact} onCheckUnique={this.handleCheckUnique} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={this.handleFilterChange} />\n        <ContactList contacts={visibleContacts} onRemove={this.handleRemoveContact} />\n      </div>\n    )\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}